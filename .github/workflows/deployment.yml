name: Preview Deployment
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
      - "release/**"
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cofigure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: set $SHA7
        run: echo "SHA7=$(git rev-parse --short ${{ github.event.pull_request.head.sha || github.sha }})" >> $GITHUB_ENV

      - name: set $URL_DOCS_SITE
        run: echo "URL_DOCS_SITE="https://${SHA7}.ods.dev"" >> $GITHUB_ENV

      - name: set $URL_STORYBOOK
        run: echo "URL_STORYBOOK="https://${SHA7}.ods.dev/sb/index.html"" >> $GITHUB_ENV

      - name: get $COMMIT_MSG
        run: |
          echo "COMMIT_MSG<<EOF" >> $GITHUB_ENV
          git log --format=%B -n 1 ${{ github.event.after }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: v12.20.0
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run lint
        run: yarn lint

      - name: Run test
        run: yarn test

      - name: Build docs
        run: |
          yarn workspace @okta/design-docs build
          yarn workspace @okta/odyssey-react build-storybook
          cp -r packages/odyssey-react/storybook-static packages/docs/dist/sb

      - name: Create GitHub deployment
        uses: bobheadxi/deployments@v0.4.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview
          ref: ${{ github.head_ref }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./packages/docs/dist/ s3://ods.dev/$SHA7 --delete

      - name: Update GitHub deployment status
        uses: bobheadxi/deployments@v0.4.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ env.URL_STORYBOOK }}

      - name: "Send workflow status to Slack (#odyssey-deployments)"
        run: sh ./scripts/notify-slack.sh
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          AUTHOR_NAME: ${{github.actor}}
          BRANCH_NAME: ${{github.head_ref}}
          PULL_REQUEST_ID: ${{github.event.pull_request.number}}
