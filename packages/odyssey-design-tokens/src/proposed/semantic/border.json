{
  // MUI has a `shape` object - it's buggy right now
  // We currently house these in `mixins` - feels off/confusing
  // Proposing a `border` set to house all related tokens
  "border": {
    "radius": {
      "main": {"value": "4px" },
      "large": {"value": "8px" },
      "circle": {"value": "100%" }
    },
    // Adding these
    "width": {
      "main": { "value": "1px" },
      "medium": { "value": "2px" }
    },
    // Moved these out of palette since their scope is "border"
    "color": {
      "subtle": {
        "value": "{palette.grey.300}", 
        "comment": "For more subtle borders that don't need to meet accessibility requirements"},
      "main": {
        "value": "{palette.grey.600}", 
        "comment": "The default/accessible border for interactive components"},
      "hover": {
        "value": "{palette.grey.100}", 
        "comment": "For borders on interactive components in their hover state"},
      "disabled": {
        "value": "{palette.grey.300}", 
        "comment": "For borders on interactive components in their disabled state"},
      "focus": {
        "value": "{palette.primary.main}", 
        "comment": "For use in the focus ring on interactive components"},
      "error-subtle": {
        "value": "{palette.error.light}", 
        "comment": "For use as border on error alerts such as Toast"},
      "error": {
        "value": "{palette.error.main}", 
        "comment": "For use on interactive components that need to display an error state"},
      "error-hover": {
        "value": "{palette.error.dark}"
      },
      // If these are limited to < 3 components, I'd cut em
      // and apply the coloration at the component level
      "warning-subtle": {
        "value": "{palette.warning.main}", 
        "comment": "For use as border on warning alerts such as Toast"},
      "info": {
        "value": "{palette.info.main}"
      },
      "success-subtle": {
        "value": "{palette.success.main}", 
        "comment": "For use as border on success alerts such as Toast"
      }
    },
    "style": {
      // should we include things like `solid` here?
    }
    // Not sure if we want these pre-assembled styles as Tokens
    // If so, we can reference tokens internally
    "border": {
      "main": {
        "value": "{border.width.main} solid {border.color.main}", 
        "comment": "Default border width for most elements"
      },
      "medium": {
        "value": "{border.width.medium} solid {border.color.main}", 
        "comment": "Can be seen in focus rings and tab underlines"
      }
    }
  }
}