/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

/* stylelint-disable no-descending-specificity, max-nesting-depth, selector-max-class */

.checkbox {
  @include is-visually-hidden;

  &:checked,
  &:indeterminate {
    + .label {
      .box {
        border-color: var(--CheckedBoxBorderColor);
        background-color: var(--CheckedBoxBackgroundColor);
      }
    }
  }

  &:checked {
    + .label {
      .indicator {
        color: var(--CheckColor);
      }
    }
  }

  &:not(:checked) {
    + .label {
      &:hover {
        .box {
          border-color: var(--HoverBorderColor);
        }
      }
    }
  }

  &:indeterminate {
    + .label {
      .indicator {
        color: var(--CheckColor);
      }
    }
  }

  &:focus {
    + .label {
      .box {
        @include outline(var(--FocusOutlineColor), var(--FocusOutlineWidth));

        border-color: var(--FocusBorderColor);
      }
    }
  }

  &:disabled {
    + .label,
    + .label:hover {
      color: var(--DisabledTextColor);
      cursor: not-allowed;

      .box {
        border-color: var(--DisabledBorderColor);
        background-color: var(--DisabledBoxBackgroundColor);
      }
    }

    &:checked,
    &:indeterminate {
      + .label {
        .box {
          border-color: var(--DisabledCheckedBoxBorderColor);
          background-color: var(--DisabledCheckedBoxBackgroundColor);
        }
      }
    }
  }

  &:invalid {
    + .label {
      color: var(--InvalidTextColor);

      .box {
        border-color: var(--InvalidBorderColor);
      }
    }

    &:checked,
    &:indeterminate {
      + .label {
        .box {
          background-color: var(--InvalidBoxBackgroundColor);
        }
      }
    }

    &:not(:checked) {
      + .label {
        &:hover {
          .box {
            border-color: var(--InvalidHoverBorderColor);
          }
        }
      }
    }

    &:focus {
      + .label {
        .box {
          @include outline(
            var(--InvalidFocusOutlineColor),
            var(--FocusOutlineWidth)
          );

          border-color: var(--InvalidBorderColor);
        }
      }
    }
  }
}

.label {
  display: block;
  position: relative;
  margin-block-end: var(--MarginBlockEnd);
  padding-inline-start: calc(var(--BoxSize) + var(--LabelPaddingInlineStart));
  font-size: var(--FontSize);
  font-weight: var(--FontWeight);
  text-align: start;

  .box,
  .indicator {
    @include border-radius(var(--BorderRadius));

    display: block;
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 0;
    transform: translateY(-50%);
    transition-property: border-color, color, opacity, box-shadow;
    transition-duration: var(--TransitionDuration);
    transition-timing-function: var(--TransitionTiming);
  }

  /* Box */

  .box {
    width: var(--BoxSize);
    height: var(--BoxSize);
    border-width: var(--BorderWidth)
    border-style: var(--BorderStyle)
    border-color: var(--BorderColor);
    background-color: var(--BoxBackgroundColor);
  }

  /* Check */

  .indicator {
    z-index: 1;
    color: transparent;
    font-size: var(--CheckSize);
  }

  &:last-child {
    margin-block-end: 0;
  }
}
