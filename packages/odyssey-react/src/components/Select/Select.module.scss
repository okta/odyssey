/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

/* stylelint-disable color-no-hex, declaration-no-important, selector-class-pattern, max-nesting-depth, selector-max-compound-selectors, selector-no-qualifying-type, no-descending-specificity, selector-max-class, selector-max-type */

/* - styles from _select.scss - */

.root:not([data-type]) {
  @include input-baseline;

  appearance: none;

  option {
    padding-block: 0;
    padding-inline: 0;
  }

  &[multiple] {
    background-image: none;
  }
}

.root {
  position: relative;
  max-width: $max-line-length;
  overflow: hidden;
  font-size: $size-body-base;

  &:focus,
  &.focused,
  .focus & {
    @include border-radius($base-border-radius);

    outline: none;
    box-shadow: 0 0 0 4px $color-primary-light;

    &.open {
      box-shadow: 0 0 0 4px $color-primary-light, 0 2px 0 4px $color-primary-light;

      &.flipped {
        box-shadow: 0 0 0 4px $color-primary-light, 0 -2px 0 4px $color-primary-light;
      }
    }
  }

  &:last-child {
    margin-block-end: 0;
  }

  &.open {
    overflow: initial;
  }

  &.disabled {
    .inner,
    .input {
      border: 1px solid $border-input-disabled;
      background-color: $bg-input-disabled;
      color: $text-sub;
      cursor: not-allowed;
      user-select: none;

      &:hover {
        border-color: $border-color-ui;
      }
    }

    &:focus,
    &.focused {
      box-shadow: none;
    }

    .item {
      cursor: not-allowed;
    }
  }

  .invalid & {
    &:focus,
    &.focused {
      @include outline($focus-ring-danger);
      @include border-radius($base-border-radius);

      outline: none;

      &.open {
        box-shadow: 0 0 0 4px $color-danger-light, 0 2px 0 4px $color-danger-light;

        &.flipped {
          box-shadow: 0 0 0 4px $color-danger-light, 0 -2px 0 4px $color-danger-light;
        }
      }
    }

    .inner,
    .input {
      border-color: $color-danger-base;
    }
  }

  [hidden] {
    display: none !important;
  }
}

.outer {
  position: relative;
}

.root[data-type*='select-one'],
.root[data-type*='select-multiple'] {
  .input {
    display: inline-block;
    width: 100%;
    margin-block-start: 0;
    margin-block-end: $spacing-xs;
    margin-inline: 0;
    padding-block: 0;
    padding-inline: 0;
    border-block-end: 0;
    background-color: transparent;
    vertical-align: top;
  }

  .button {
    @include border-radius(10em);

    position: absolute;
    inset-block-start: 50%;
    inset-inline-end: 0;
    width: 20px;
    height: 20px;
    margin-block-start: -$spacing-s;
    margin-inline-end: 25px;
    padding-block: 0;
    padding-inline: 0;
    opacity: 0.25;

    &:hover,
    &:focus {
      opacity: 1;
    }

    &:focus {
      @include outline($focus-ring-primary);
    }
  }

  .item[data-value=''] .button {
    display: none;
  }

  + .indicator {
    position: absolute;
    inset-block-start: 50%;
    inset-inline-end: $spacing-s-em;
    transform: translateY(-50%);
    font-size: 0.95em;
    pointer-events: none;
  }

  &.open + .indicator {
    transform: translateY(-50%) rotate(180deg);
  }

  &[dir='rtl'] {
    .indicator {
      inset-inline-end: auto;
      inset-inline-start: 11.5px;
    }

    .button {
      inset-inline-end: auto;
      inset-inline-start: 0;
      margin-inline-end: 0;
      margin-inline-start: 25px;
    }
  }
}

.root[data-type*='select-one'] {
  .button {
    display: none; // remove this functionality for Single Select, unavailable via JS
  }
}

.root[data-type*='select-multiple'],
.root[data-type*='text'] {
  .inner {
    padding-block-end: 0;
    cursor: text;
  }

  .button {
    @include border-radius(100%);

    display: inline-block;
    position: relative;
    width: 1em;
    height: 1em;
    margin-block-start: 0;
    margin-inline-end: 0;
    margin-block-end: 0;
    margin-inline-start: $spacing-s;
    padding-block: 0;
    padding-inline: 0;
    opacity: 1;
    background-color: cv('blue', '400');
    line-height: 1;

    &:hover,
    &:focus {
      background-color: $color-primary-base;
    }
  }

  .buttonIndicator {
    display: block;
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    width: 1em;
    height: 1em;
    transform: translate(-50%, -50%);
    color: $white;
    font-size: 0.5em;
    text-indent: 0;
    pointer-events: none;
  }
}

.inner {
  @include border-radius($base-border-radius);

  display: inline-block;
  width: 100%;
  padding-block: $spacing-xs-em;
  padding-inline: $spacing-s-em;
  overflow: hidden;
  transition-property: border-color, background-color, box-shadow;
  transition-duration: $base-duration;
  transition-timing-function: $base-timing;
  border: 1px solid $border-color-ui;
  background-color: $white;
  box-shadow: 0 0 0 0 $color-primary-light;
  color: $text-body;
  font-family: $body-font-family;
  font-size: $size-body-base;
  line-height: $base-line-height;
  vertical-align: top;

  &:hover,
  .focused &,
  .open &,
  .focus &,
  .hover & {
    border-color: $color-primary-base;
  }

  .open &,
  .invalid .open & {
    border-start-start-radius: $base-border-radius;
    border-start-end-radius: $base-border-radius;
    border-end-start-radius: 0;
    border-end-end-radius: 0;
    border-block-end-color: $border-color-ui;
  }

  .flipped.open &,
  .invalid .flipped.open & {
    border-start-start-radius: 0;
    border-start-end-radius: 0;
    border-end-start-radius: $base-border-radius;
    border-end-end-radius: $base-border-radius;
    border-block-start-color: $border-color-ui;
    border-block-end-color: $color-primary-base;
  }
}

.list {
  margin-block: 0;
  margin-inline: 0;
  padding-inline-start: 0;
  list-style: none;
}

.listSingle {
  display: inline-block;
  width: 100%;

  .item {
    width: 100%;
  }
}

.listMultiple {
  display: inline;

  .item {
    @include border-radius(1em);

    display: inline-block;
    margin-inline-end: $spacing-xs;
    margin-block-end: $spacing-xs;
    padding-block: 0;
    padding-inline: $spacing-s;
    border: 1px solid $color-primary-light;
    background-color: cv('blue', '000');
    color: $text-body;
    font-size: $size-body-base;
    font-weight: 400;
    line-height: calc((#{$base-line-height} * 1em) - 2px); // Adjust for pill border
    overflow-wrap: break-word;
    vertical-align: middle;

    &[data-deletable] {
      padding-inline-end: $spacing-xs;
    }

    [dir='rtl'] & {
      margin-inline-end: 0;
      margin-inline-start: $spacing-xs;
    }

    &.highlighted {
      background-color: $color-primary-light;
    }

    .disabled & {
      border: 1px solid $border-input-disabled;
      background-color: $bg-input-disabled;
    }
  }
}

.listDropdown {
  visibility: hidden;
  position: absolute;
  z-index: 1;
  inset-block-start: 100%;
  width: 100%;
  overflow: hidden;
  border: 1px solid $border-color-ui;
  border-block-start-width: 0;
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: $base-border-radius;
  border-end-end-radius: $base-border-radius;
  background-color: $white;
  overflow-wrap: break-word;
  will-change: visibility;

  &.active {
    visibility: visible;
  }

  .focused & {
    @include outline($focus-ring-primary);

    clip-path: inset(0 -4px -4px -4px);
  }

  .open & {
    border-color: $color-primary-base;
  }

  .flipped & {
    inset-block-start: auto;
    inset-block-end: 100%;
    border-block-end: 0;
    border-block-start-width: 1px;
    border-start-start-radius: $base-border-radius;
    border-start-end-radius: $base-border-radius;
    border-end-start-radius: 0;
    border-end-end-radius: 0;
  }

  .flipped.focused & {
    clip-path: inset(-4px -4px 0 -4px);
  }

  .list {
    position: relative;
    max-height: 300px;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    will-change: scroll-position;
  }

  .item {
    position: relative;
    padding-block: $spacing-xs;
    padding-inline: $spacing-s;
    font-size: $size-body-base;

    [dir='rtl'] & {
      text-align: end;
    }

    &:empty {
      display: none;
    }
  }

  .itemSelectable {
    @media (min-width: 640px) {
      padding-inline-end: 100px;

      &::after {
        content: attr(data-select-text);
        position: absolute;
        inset-block-start: 50%;
        inset-inline-end: $spacing-s;
        transform: translateY(-50%);
        opacity: 0;
        font-size: $size-body-caption;
      }

      [dir='rtl'] & {
        padding-inline-end: $spacing-s;
        padding-inline-start: 100px;
        text-align: end;

        &::after {
          inset-inline-end: auto;
          inset-inline-start: $spacing-s;
        }
      }
    }

    &.highlighted {
      background-color: cv('blue', '000');

      &::after {
        opacity: 0.5;
      }
    }
  }

  .invalid .focused & {
    @include outline($focus-ring-danger);
  }

  .invalid .open & {
    border-color: $color-danger-base;
  }
}

.item {
  cursor: default;
}

.itemDisabled {
  color: $text-sub;
  cursor: not-allowed;
  user-select: none;
}

.heading {
  padding-block-start: $spacing-s;
  padding-block-end: 0;
  padding-inline: $spacing-s;
  color: $text-sub;
  font-size: $size-body-caption;
  font-weight: 600;
}

.button {
  border: 0;
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: center;
  text-indent: -9999px;
  appearance: none;

  &:focus {
    outline: none;
  }
}

.input {
  @include border-radius(0);

  display: inline-block;
  max-width: 100%;
  margin-block-end: 5px;
  padding-block: 4px;
  padding-inline-start: 2px;
  padding-inline-end: 0;
  border: 0;
  background-color: $white;
  vertical-align: baseline;

  &:focus {
    outline: 0;
  }

  [dir='rtl'] & {
    padding-inline-end: 2px;
    padding-inline-start: 0;
  }
}

.placeholder {
  opacity: 0.5;
}

/* field classes */

.optionalLabel {
  display: block;
  color: $text-sub;
  font-size: $size-body-caption;
  font-weight: 400;
  line-height: $spacing-m;
}

.fieldset {
  margin-block-start: 0;
  margin-block-end: $spacing-s;
  margin-inline: 0;

  &:last-child {
    margin-block: 0;
    margin-inline: 0;
  }
}

.label {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  color: $text-heading;
  font-weight: 600;
}

.labelDisabled {
  color: $text-body;
}

.hint {
  color: $text-body;
  font-size: $size-body-caption;
  margin-block-end: $spacing-xs;
}

.fieldsetFlex {
  display: flex;
  flex-direction: column;
  max-width: $max-line-length;
}
