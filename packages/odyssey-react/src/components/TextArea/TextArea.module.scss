/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

.root {
  @include border-radius(var(--BorderRadius));

  display: block;
  position: relative;
  width: 100%;
  min-width: var(--MinWidth);
  max-width: var(--MaxWidth);
  min-height: var(--MinHeight);
  padding-block-start: calc(var(--PaddingBlockStart) - var(--BorderWidth));
  padding-block-end: calc(var(--PaddingBlockEnd) - var(--BorderWidth));
  padding-inline: calc(var(--PaddingInline) - var(--BorderWidth));
  margin-block-start: var(--MarginBlockStart);
  margin-block-end: var(--MarginBlockEnd);
  margin-inline: var(--MarginInline);
  transition-property: border-color, background-color;
  transition-duration: var(--TransitionDuration);
  transition-timing-function: var(--TransitionTimingFunction);
  border-width: var(--BorderWidth);
  border-style: var(--BorderStyle);
  border-color: var(--BorderColor);
  background-color: var(--BackgroundColor);
  box-shadow: 0 0 0 0 var(--BoxShadowColor);
  color: var(--TextColor);
  font-family: var(--FontFamily);
  font-size: var(--FontSize);
  line-height: var(--LineHeight);

  &:hover,
  &:focus {
    border-color: var(--HoverFocusBorderColor);
  }

  &:focus {
    outline-color: var(--FocusOutlineColor);
    outline-offset: var(--FocusOutlineOffset);
    outline-style: var(--FocusOutlineStyle);
    outline-width: var(--FocusOutlineWidth);
  }

  &:invalid {
    border-color: var(--InvalidBorderColor);
  }

  &:disabled {
    opacity: 1;
    color: var(--DisabledTextColor);
    cursor: not-allowed;
  }

  &:disabled,
  &[readonly] {
    border-color: var(--DisabledBorderColor);
    background-color: var(--DisabledBackgroundColor);

    &:hover {
      border-color: var(--DisabledBorderColor);
    }
  }

  &:invalid:focus {
    outline-color: var(--InvalidFocusOutlineColor);
  }

  &::placeholder {
    color: var(--PlaceholderTextColor);
  }
}

.noneResize {
  resize: none;
}

.horizontalResize {
  resize: horizontal;
}

.verticalResize {
  resize: vertical;
}

.bothResize {
  resize: both;
}
