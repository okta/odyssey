/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

.root {
  @include border-radius(var(--BorderRadius));

  display: inline-block;
  position: relative;
  margin-block: var(--MarginBlock);
  margin-inline: var(--MarginInline);
  padding-block: calc(var(--PaddingBlock) - var(--BorderWidth));
  padding-inline: calc(var(--PaddingInline) - var(--BorderWidth));
  transition-property: color, background-color, border-color, outline-offset,
    outline-color;
  transition-duration: var(--TransitionDuration);
  transition-timing-function: var(--TransitionTimingFunction);
  border-width: var(--BorderWidth);
  border-style: var(--BorderStyle);
  border-color: var(--PrimaryBorderColor);
  outline-color: transparent;
  outline-offset: 0;
  background-color: var(--PrimaryBackgroundColor);
  color: var(--TextColor);
  font-family: var(--FontFamily);
  font-size: var(--FontSize);
  font-weight: var(--FontWeight);
  line-height: var(--LineHeight);
  white-space: nowrap;

  &:hover {
    border-color: var(--PrimaryHoverBorderColor);
    background-color: var(--PrimaryHoverBackgroundColor);
  }

  &:focus {
    outline-color: var(--FocusOutlineColor);
    outline-offset: var(--FocusOutlineOffset);
    outline-style: var(--FocusOutlineStyle);
    outline-width: var(--FocusOutlineWidth);
    background-color: var(--PrimaryFocusBackgroundColor);
  }

  &:disabled {
    border-color: var(--PrimaryDisabledBorderColor);
    background-color: var(--PrimaryDisabledBackgroundColor);
    cursor: not-allowed;
  }

  & + & {
    margin-inline-start: $spacing-s;
  }
}

/* Parts */

.label {
  display: inline-block;
  min-width: var(--LabelMinWidth);

  &:not(:only-child) {
    margin-inline-start: var(--LabelMarginInlineStart);
  }
}

/* Variants */

.secondaryVariant {
  border-color: var(--SecondaryBorderColor);
  background-color: var(--SecondaryBackgroundColor);
  color: var(--SecondaryTextColor);

  &:hover {
    border-color: var(--SecondaryHoverBorderColor);
    background-color: var(--SecondaryHoverBackgroundColor);
    color: var(--SecondaryHoverTextColor);
  }

  &:focus {
    background-color: var(--SecondaryFocusBackgroundColor);
    color: var(--SecondaryFocusTextColor);
  }

  &:disabled {
    border-color: var(--SecondaryDisabledBorderColor);
    background-color: var(--SecondaryDisabledBackgroundColor);
    color: var(--SecondaryDisabledTextColor);
  }
}

.dangerVariant {
  background-color: var(--DangerBackgroundColor);

  &:hover {
    border-color: var(--DangerHoverBorderColor);
    background-color: var(--DangerHoverBackgroundColor);
  }

  &:focus {
    outline-color: var(--DangerFocusOutlineColor);
    background-color: var(--DangerFocusBackgroundColor);
  }

  &:disabled {
    border-color: var(--DangerDisabledBorderColor);
    background-color: var(--DangerDisabledBackgroundColor);
  }
}

.floatingVariant {
  border-color: transparent;
  background-color: var(--FloatingBackgroundColor);
  color: var(--FloatingTextColor);

  &:hover,
  &:focus {
    border-color: transparent;
    background-color: var(--FloatingHoverBackgroundColor);
  }

  &:disabled {
    background-color: var(--FloatingDisabledBackgroundColor);
    color: var(--FloatingDisabledTextColor);
  }
}

.clearVariant {
  background-color: var(--ClearBackgroundColor);
  color: var(--ClearTextColor);

  &:hover {
    border-color: var(--ClearHoverBorderColor);
    background-color: var(--ClearHoverBackgroundColor);
    color: var(--ClearHoverTextColor);
  }

  &:focus {
    background-color: var(--ClearFocusBackgroundColor);
    color: var(--ClearFocusTextColor);
  }

  &:disabled {
    background-color: var(--ClearDisabledBackgroundColor);
    color: var(--ClearDisabledTextColor);
  }
}

/* Layouts */

.wideLayout {
  display: block;
  width: 100%;
  margin-block: var(--WideLayoutMarginBlock);
  margin-inline: var(--WideLayoutMarginInline);

  &:not(:last-child) {
    margin-block-end: var(--WideLayoutMarginBlockEnd);
  }
}

/* Sizes */

.sSize {
  padding-block: calc(var(--SmallSizePaddingBlock) - var(--BorderWidth));
  padding-inline: calc(var(--SmallSizePaddingInline) - var(--BorderWidth));
  font-size: var(--SmallSizeFontSize);
}

.lSize {
  padding-block: calc(var(--LargeSizePaddingBlock) - var(--BorderWidth));
  padding-inline: calc(var(--LargeSizePaddingInline) - var(--BorderWidth));
}
