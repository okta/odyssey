/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

.root {
  @include border-radius(var(--BorderRadius));

  display: inline-block;
  position: relative;
  margin-block: var(--SpaceMarginBlock);
  margin-inline: var(--SpaceMarginInline);
  padding-block: var(--SpacePaddingBlock);
  padding-inline: var(--SpacePaddingInline);
  transition-property: color, background-color, border-color, box-shadow;
  transition-duration: var(--TransitionDuration);
  transition-timing-function: var(--TransitionTiming);
  border-width: var(--BorderWidth);
  border-style: var(--BorderStyle);
  border-color: var(--ColorBorderPrimary);
  background-color: var(--ColorBackgroundPrimary);
  color: var(--ColorText);
  font-family: var(--FontFamily);
  font-size: var(--FontSize);
  font-weight: var(--FontWeight);
  line-height: var(--FontLineHeight);
  white-space: var(--FontWhiteSpace);

  &:hover {
    border-color: var(--ColorBorderPrimaryHover);
    background-color: var(--ColorBackgroundPrimaryHover);
  }

  &:focus {
    @include outline;

    background-color: var(--ColorBackgroundPrimaryFocus);
  }

  &:disabled {
    border-color: var(--ColorBorderPrimaryDisabled);
    background-color: var(--ColorBackgroundPrimaryDisabled);
    cursor: not-allowed;
  }

  & + & {
    margin-inline-start: var(--Gutter);
  }
}

/* Parts */

.label {
  display: inline-block;
  min-width: var(--LabelMinWidth);

  &:not(:only-child) {
    margin-inline-start: var(--LabelSpaceMarginInlineStart);
  }
}

/* Variants */

.secondaryVariant {
  border-color: var(--ColorBorderSecondary);
  background-color: var(--ColorBackgroundSecondary);
  color: var(--ColorTextSecondary);

  &:hover {
    border-color: var(--ColorBorderSecondaryHover);
    background-color: var(--ColorBackgroundSecondaryHover);
    color: var(--ColorTextSecondaryHover);
  }

  &:focus {
    border-color: var(--ColorBorderSecondaryFocus);
    background-color: var(--ColorBackgroundSecondaryFocus);
    color: var(--ColorTextSecondaryFocus);
  }

  &:disabled {
    border-color: var(--ColorBorderSecondaryDisabled);
    background-color: var(--ColorBackgroundSecondaryDisabled);
    color: var(--ColorTextSecondaryDisabled);
  }
}

.dangerVariant {
  background-color: var(--ColorBackgroundDanger);

  &:hover {
    border-color: var(--ColorBorderDangerHover);
    background-color: var(--ColorBackgroundDangerHover);
  }

  &:focus {
    @include outline(var(--ColorFocusOutlineDanger), var(--FocusOutlineWidth));

    background-color: var(--ColorBackgroundDangerFocus);
  }

  &:disabled {
    border-color: var(--ColorBorderDangerDisabled);
    background-color: var(--ColorBackgroundDangerDisabled);
  }
}

.dismissVariant,
.dismissInvertedVariant {
  padding-block: calc(var(--SpacePaddingBlockDismiss) * 0.5);
  padding-inline: calc(var(--SpacePaddingInlineDismiss) * 0.5);
  border: 0;
  background-color: var(--ColorBackgroundDismiss);
  color: var(--ColorTextDismiss);
  line-height: var(--FontLineHeightDismiss);

  &:hover {
    border-color: var(--ColorBorderDismissHover);
    background-color: var(--ColorBackgroundDismissHover);
  }

  &:focus {
    background-color: var(--ColorBackgroundDismissFocus);
    box-shadow: 0 0 0 2px;
  }

  &:disabled {
    background-color: var(--ColorBackgroundDismissDisabled);
    color: var(--ColorTextDismissDisabled);
  }

  .icon {
    display: block;
    margin-block-start: 0.0625em;
    margin-block-end: -0.0625em;
    line-height: 0.9;
  }
}

.dismissInvertedVariant:focus {
  box-shadow: 0 0 0 2px var(--ColorShadowDismissInverted);
}

.clearVariant {
  background-color: var(--ColorBackgroundClear);
  color: var(--ColorTextClear);

  &:hover {
    border-color: var(--ColorBorderClearHover);
    background-color: var(--ColorBackgroundClearHover);
    color: var(--ColorTextClearHover);
  }

  &:focus {
    background-color: var(--ColorBackgroundClearFocus);
    color: var(--ColorTextClearFocus);
  }

  &:disabled {
    background-color: var(--ColorBackgroundClearDisabled);
    color: var(--ColorTextClearDisabled);
  }
}

/* Layouts */

.wideLayout {
  display: block;
  width: 100%;
  margin-block: var(--SpaceMarginBlockWideLayout);
  margin-inline: var(--SpaceMarginInlineWideLayout);

  &:not(:last-child) {
    margin-block-end: var(--SpaceMarginBlockEndWideLayout);
  }
}

/* Sizes */

.sSize {
  font-size: var(--FontSizeSmallSize);
  line-height: var(--FontLineHeightSmallSize);
}

.lSize {
  padding-block: var(--SpacePaddingBlockLargeSize);
  padding-inline: var(--SpacePaddingInlineLargeSize);
}
