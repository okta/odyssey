/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */

.root {
  @include border-radius($base-border-radius);

  display: inline-block;
  position: relative;
  margin-block: 0;
  margin-inline: 0;
  padding-block: $spacing-xs-em;
  padding-inline: $spacing-s-em;
  transition-property: color, background-color, border-color, box-shadow;
  transition-duration: 100ms;
  transition-timing-function: linear;
  border: 1px solid transparent;
  background-color: var(--ColorBackgroundPrimary);
  box-shadow: 0 0 0 0 $color-primary-light;
  color: $white;
  font-size: ms(0);
  font-weight: 600;
  line-height: $base-line-height;
  white-space: nowrap;

  &:hover {
    border-color: var(--ColorBorderPrimaryHover);
    background-color: var(--ColorBackgroundPrimaryHover);
  }

  &:focus {
    @include outline;

    background-color: var(--ColorBackgroundPrimaryFocus);
  }

  &:disabled {
    border-color: transparent;
    background-color: var(--ColorBackgroundPrimaryDisabled);
    cursor: not-allowed;
  }

  & + & {
    margin-inline-start: $spacing-s;
  }
}

/* Parts */

.label {
  display: inline-block;
  min-width: $spacing-l-em;

  &:not(:only-child) {
    margin-inline-start: $spacing-xs;
  }
}

/* Variants */

.secondaryVariant {
  border-color: var(--ColorBorderSecondary);
  background-color: var(--ColorBackgroundSecondary);
  color: $color-primary-base;

  &:hover {
    border-color: var(--ColorBorderSecondaryHover);
    background-color: var(--ColorBackgroundSecondaryHover);
    color: $white;
  }

  &:focus {
    border-color: var(--ColorBorderSecondaryFocus);
    background-color: var(--ColorBackgroundSecondaryFocus);
    color: $color-primary-base;
  }

  &:disabled {
    border-color: var(--ColorBorderSecondaryDisabled);
    background-color: var(--ColorBackgroundSecondaryDisabled);
    color: $color-primary-light;
  }
}

.dangerVariant {
  background-color: $color-danger-base;

  &:hover {
    border-color: $color-danger-dark;
    background-color: $color-danger-dark;
  }

  &:focus {
    @include outline($focus-ring-danger);

    background-color: $color-danger-dark;
  }

  &:disabled {
    border-color: $color-danger-light;
    background-color: $color-danger-light;
  }
}

.dismissVariant,
.dismissInvertedVariant {
  padding-block: ($spacing-xs-em * 0.5);
  padding-inline: ($spacing-xs-em * 0.5);
  border: 0;
  background-color: transparent;
  color: inherit;
  line-height: 1;

  &:hover {
    border-color: transparent;
    background-color: transparentize($white, 0.6);
  }

  &:focus {
    background-color: transparentize($white, 0.6);
    box-shadow: 0 0 0 2px;
  }

  &:disabled {
    background-color: transparentize(cv("gray", "100"), 0.6);
    color: cv("gray", "600");
  }

  .icon {
    display: block;
    margin-block-start: 0.0625em;
    margin-block-end: -0.0625em;
    line-height: 0.9;
  }
}

.dismissInvertedVariant:focus {
  box-shadow: 0 0 0 2px $white;
}

.clearVariant {
  background-color: transparent;
  color: $color-primary-base;

  &:hover {
    border-color: transparent;
    background-color: cv("blue", "000");
    color: $color-primary-dark;
  }

  &:focus {
    background-color: $white;
    color: $color-primary-base;
  }

  &:disabled {
    background-color: transparent;
    color: $color-primary-light;
  }
}

/* Layouts */

.wideLayout {
  display: block;
  width: 100%;
  margin-block: 0;
  margin-inline: 0;

  &:not(:last-child) {
    margin-block-end: $spacing-s;
  }
}

/* Sizes */

.sSize {
  font-size: ms(-1);
  line-height: $title-line-height;
}

.lSize {
  padding-block: $spacing-s-em;
  padding-inline: $spacing-m-em;
}
