// Copyright 2018-Present Okta, Inc.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

@function ms($step) {
  $value: 1rem;

  @if $step > 0 {
    @for $i from 1 through $step {
      $value: ($value * $scale-ratio);
    }
  }

  @if $step < 0 {
    @for $i from $step through -1 {
      $value: ($value / $scale-ratio);
    }
  }

  @return $value;
}

// TODO: get rid of this
@function rem-to-px($value) {
  @if variable-exists('base-font-size') {
    @return ($value / 1rem) * $base-font-size;
  }
}

/**
 * Simple string replacement
 */

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @return if($index, str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace), $string);
}

/**
 * Retrieves map keys from nested maps.
 */

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

/**
 * Retrieves and encodes icons for use in CSS
 * Works down to IE9
 *
 * Refs:
 * https://css-tricks.com/creating-a-maintainable-icon-system-with-sass/
 * https://codepen.io/chriscoyier/pen/ZQgvyG/
 * https://codepen.io/tigt/post/optimizing-svgs-in-data-uris
 * https://codepen.io/jakob-e/pen/doMoML
 */

$icons: (
  'arrow':'<svg viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.29289 0.292893C4.68342 -0.0976311 5.31658 -0.0976311 5.70711 0.292893L9.70711 4.29289C10.0976 4.68342 10.0976 5.31658 9.70711 5.70711C9.31658 6.09763 8.68342 6.09763 8.29289 5.70711L6 3.41421V11C6 11.5523 5.55228 12 5 12C4.44772 12 4 11.5523 4 11V3.41421L1.70711 5.70711C1.31658 6.09763 0.683417 6.09763 0.292893 5.70711C-0.0976311 5.31658 -0.0976311 4.68342 0.292893 4.29289L4.29289 0.292893Z" fill="%%COLOR%%"/></svg>',
  'anchor': '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.2644 9.73252C14.0207 9.4874 13.7505 9.27011 13.4588 9.08464C12.6863 8.58993 11.7881 8.32705 10.8707 8.32705C9.5974 8.32468 8.37583 8.8306 7.47704 9.73252L3.11668 14.0963C2.21941 14.9953 1.7151 16.2133 1.7143 17.4835C1.71261 20.134 3.85985 22.284 6.51035 22.2857C7.7817 22.2901 9.00214 21.7866 9.90062 20.887L13.5 17.2877C13.5654 17.2229 13.6019 17.1344 13.6014 17.0423C13.6003 16.853 13.4459 16.7004 13.2566 16.7015H13.1195C12.3675 16.7042 11.6222 16.5598 10.9256 16.2765C10.7972 16.2236 10.6497 16.2535 10.552 16.3519L7.96383 18.9434C7.16017 19.7471 5.85717 19.7471 5.0535 18.9434C4.24983 18.1397 4.24983 16.8367 5.0535 16.0331L9.43101 11.659C10.234 10.857 11.5349 10.857 12.3379 11.659C12.8791 12.1684 13.7233 12.1684 14.2644 11.659C14.4973 11.426 14.6384 11.1169 14.6621 10.7883C14.6871 10.3956 14.5423 10.0111 14.2644 9.73252Z" fill="%%COLOR%%"/><path d="M20.8769 3.11999C19.0026 1.24571 15.9638 1.24571 14.0895 3.11999L10.4936 6.71247C10.3949 6.81169 10.3664 6.96093 10.4216 7.08956C10.4762 7.21855 10.6038 7.30134 10.7438 7.29865H10.8707C11.6218 7.29729 12.3659 7.44283 13.0611 7.72716C13.1895 7.77998 13.337 7.75018 13.4348 7.65176L16.016 5.07392C16.8197 4.27025 18.1227 4.27025 18.9263 5.07392C19.73 5.87759 19.73 7.18059 18.9263 7.98426L15.7109 11.1962L15.6835 11.2271L14.5591 12.3446C13.7561 13.1466 12.4552 13.1466 11.6522 12.3446C11.111 11.8353 10.2668 11.8353 9.7257 12.3446C9.49138 12.5794 9.3501 12.8912 9.32805 13.2222C9.30298 13.6148 9.4478 13.9994 9.7257 14.278C10.1225 14.6764 10.5867 15.0014 11.0969 15.2378C11.1689 15.2721 11.2408 15.2995 11.3128 15.3304C11.3848 15.3612 11.4602 15.3852 11.5322 15.4126C11.6042 15.4401 11.6796 15.464 11.7516 15.4846L11.9538 15.5394C12.0909 15.5737 12.2281 15.6011 12.3686 15.6251C12.5379 15.6503 12.7084 15.6663 12.8794 15.6731H13.1193H13.1399L13.3456 15.6492C13.421 15.6457 13.4998 15.6286 13.589 15.6286H13.7055L13.942 15.5943L14.0517 15.5738L14.2506 15.5326H14.2883C15.1303 15.3211 15.8992 14.8851 16.513 14.2711L20.8768 9.90734C22.7512 8.03306 22.7512 4.99426 20.8769 3.11999Z" fill="%%COLOR%%"/></svg>',
  'caret':'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16"><path fill="%%COLOR%%" fill-rule="evenodd" d="M8.73105 9.21673c-.39533.42357-1.06677.42357-1.46211 0L3.13105 4.78327c-.39533-.42357-1.06677-.42357-1.46211 0l-.03211.03441c-.35859.38421-.35859.98043 0 1.36464l5.62704 6.02898c.3972.4256 1.07254.4232 1.4668-.0051l5.62423-6.11001c.3604-.39146.3473-.99759-.0295-1.37318-.3967-.39541-1.042-.38376-1.4242.02572l-4.17015 4.468z" clip-rule="evenodd"/></svg>',
  'check':'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12"><path fill="%%COLOR%%" d="M0 5.6L1.6 4l3.2 3.3 5.6-5.7L12 3.1l-7.2 7.4L0 5.6z"/></svg>',
  'close':'<svg viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="ods-icon"><path d="M2.32289 10.1181C1.89237 10.5486 1.89237 11.2466 2.32289 11.6771C2.7534 12.1076 3.45141 12.1076 3.88192 11.6771L7 8.55904L10.1181 11.6771C10.5486 12.1076 11.2466 12.1076 11.6771 11.6771C12.1076 11.2466 12.1076 10.5486 11.6771 10.1181L8.55904 7L11.6771 3.88193C12.1076 3.45141 12.1076 2.7534 11.6771 2.32289C11.2466 1.89237 10.5486 1.89237 10.1181 2.32289L7 5.44096L3.88193 2.32289C3.45141 1.89237 2.7534 1.89237 2.32289 2.32289C1.89237 2.7534 1.89237 3.45141 2.32289 3.88192L5.44096 7L2.32289 10.1181Z" fill="%%COLOR%%"/></svg>',
  'dash':'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 2"><path fill="%%COLOR%%" d="M0 0h10v2H0z"/></svg>',
  'double-arrow':'<svg viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.29289 0.292893C2.68342 -0.0976311 3.31658 -0.0976311 3.70711 0.292893L5.70711 2.29289C6.09763 2.68342 6.09763 3.31658 5.70711 3.70711C5.31658 4.09763 4.68342 4.09763 4.29289 3.70711L4 3.41421V10C4 10.5523 3.55228 11 3 11C2.44772 11 2 10.5523 2 10V3.41421L1.70711 3.70711C1.31658 4.09763 0.683417 4.09763 0.292893 3.70711C-0.0976311 3.31658 -0.0976311 2.68342 0.292893 2.29289L2.29289 0.292893Z" fill="%%COLOR%%"/><path fill-rule="evenodd" clip-rule="evenodd" d="M9 12C8.73478 12 8.48043 11.8946 8.29289 11.7071L6.29289 9.70711C5.90237 9.31658 5.90237 8.68342 6.29289 8.29289C6.68342 7.90237 7.31658 7.90237 7.70711 8.29289L8 8.58579L8 2C8 1.44771 8.44772 1 9 1C9.55229 1 10 1.44771 10 2L10 8.58579L10.2929 8.29289C10.6834 7.90237 11.3166 7.90237 11.7071 8.29289C12.0976 8.68342 12.0976 9.31658 11.7071 9.70711L9.70711 11.7071C9.51957 11.8946 9.26522 12 9 12Z" fill="%%COLOR%%"/></svg>',
  'external':'<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 12 12"><path fill="%%COLOR%%" fill-rule="evenodd" d="M10.462 1.809A.499.499 0 0010 1.5H6.5a.5.5 0 000 1h2.293L4.646 6.646a.5.5 0 10.708.708L9.5 3.207V5.5a.5.5 0 001 0V2v-.003a.5.5 0 00-.038-.188zM3.067 2.5a.567.567 0 00-.567.567v5.866a.567.567 0 00.567.567h5.866a.567.567 0 00.567-.567V8a.5.5 0 011 0v.933A1.567 1.567 0 018.933 10.5H3.067A1.567 1.567 0 011.5 8.933V3.067A1.567 1.567 0 013.067 1.5H4a.5.5 0 010 1h-.933z" clip-rule="evenodd"/></svg>',
  'search':'<svg viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="ods-icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.75739 10.1716C7.96696 10.6951 7.01908 11 6 11C3.23858 11 1 8.76142 1 6C1 3.23858 3.23858 1 6 1C8.76142 1 11 3.23858 11 6C11 7.01908 10.6951 7.96696 10.1716 8.75739L12.6908 11.2766C13.0813 11.6671 13.0813 12.3003 12.6908 12.6908C12.3003 13.0813 11.6671 13.0813 11.2766 12.6908L8.75739 10.1716ZM9 6C9 7.65685 7.65685 9 6 9C4.34315 9 3 7.65685 3 6C3 4.34315 4.34315 3 6 3C7.65685 3 9 4.34315 9 6Z" fill="%%COLOR%%"/></svg>',
);

@function get-icon($icon, $color) {
  // Check for valid color
  @if 'color' != type-of( $color ) {
    @warn 'The requested color - "' + $color + '" - was not recognized as a Sass color value.';

    @return null;
  }

  @if map-has-key( $icons, $icon ) {
    $icon: map-get($icons, $icon);
    $color-placeholder: '%%COLOR%%';
    $icon: str-replace($icon, $color-placeholder, $color);
  } @else {
    @warn 'The requested icon - "' + $icon + '" - is not defined in the $icons map.';

    @return null;
  }

  // Add missing namespace
  @if not str-index($icon,xmlns) {
    $icon: str-replace($icon, '<svg', '<svg xmlns="http://www.w3.org/2000/svg"');
  }

  // Chunk up string in order to avoid "stack level too deep" error

  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($icon)/$slice);

  @for $i from 1 through $loops {
    $chunk: str-slice($icon, $index, $index + $slice - 1);

    // Encode
    $chunk: str-replace($chunk, '"', '\'');
    $chunk: str-replace($chunk, '%', '%25');
    $chunk: str-replace($chunk, '#', '%23');
    $chunk: str-replace($chunk, '{', '%7B');
    $chunk: str-replace($chunk, '}', '%7D');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url('data:image/svg+xml,#{$encoded}');
}
